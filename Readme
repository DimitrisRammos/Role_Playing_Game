//////////////////////////////////////////////////////////////////////////////
//                                                                         //
//                      Object-oriented Programming                        //  
//                      Academic year: 2020 - 2021                         //
//                                                                         //
/////////////////////////////////////////////////////////////////////////////



Team members:
Ιωάννα Οικονόμου sdi1900137
Δημήτρης Ράμμος sdi1900161





According to our implementation of the game, the heroes move thoughout the grid as a team and not independently.
The monsters that have died in a war, revive after the end of the war to be ready for the next war.
The heroes always fight against monsters of the same level.
///////////////////////////////////////////////////////////////////




////////////////////////////////////////////////////////////////////
//                                                                //
//                      Role_Playing_Game                         //
//                                                                //
////////////////////////////////////////////////////////////////////

For Role_Playing_Game.cpp:

This file include the main for program. From this file start to run the program. It read all files, create vectors and after it give in grid this
vectors( vector include monsters, heroes,item and spell). The player must choose 1-3 heroes( that is Warrior, Paladin and Sorcerer). The player change
heroes and after they with a probability start the game from a  Market square. After with a probability the monsters are introduced to grid(from files monsters.txt).
After the game start and program continue run from function StartGame( from Grid.cpp).

If player give for input quitGame, than the Game Over and the player is losser.
///////////////////////////////////////////////////////////////////




In the header file "information.h" you can find a number of constant variables that remain unchanged throughout the game.
Also, the input is taken from 8 txt files, examples of which you can find in the folder "files".
These files are opened from the main function of the program.
///////////////////////////////////////////////////////////////////




////////////////////////////////////////////////////////////////////
//                                                                //
//                         FILES                                  //
//                                                                //
////////////////////////////////////////////////////////////////////

The file formats are explained thoroughly below:
-armors.txt:
    name_of_armor price requires_level reduse_of_damage
-firespells.txt:
    name_of_firespell price level low_damage high_damage energy reduce_of_defense rounds
-heroes.txt:
    name_of_hero strength dexterity agility
-icespells.txt:
    name_of_icespell price level low_damage high_damage energy new_low_damage rounds
-lightingspells.txt:
    name_of_lightingspell price level low_damage high_damage energy defense_probability_reduce rounds
-monsters.txt:
    name_of_monster low_damage high_damage defense probability_of_escaping
-potions.txt:
    name_of_potion price level characteristic increase
-weapons.txt:
    name_of_weapon price level required_number_of_hands damage
///////////////////////////////////////////////////////////////////





////////////////////////////////////////////////////////////////////
//                                                                //
//                      LIVING BEING                              //
//                                                                //
////////////////////////////////////////////////////////////////////

For Living_Being.cpp and Living_Being.h:


The Living_Being.cpp include the monsters and heroes that play in the game.
It has one  SuperClass, the Living_Being, with constructor Living Being(name , level).
Tha  Subclasses Hero and Monster are Classes that inherit from Basic Class Living_Being. The Subclasses Warrior, Sorcerer and Paladin(properties of Hero) 
are Classes that inherit from Class Hero. The Subclasses Dragon, Exoskeleton and Spirit(properties of monster) are Classes that inherit from class Monster.


For level_up and constructor:

Every monster or hero that is created or that moves to the next level, has some favored characteristics (better that the rest of the characteristics).
It(monster or hero) for each subcategory( Warrior, Sorcerer, Paladin, Dragon, Exoskeleton and Spirit)
has a skill building factor. For the Hero to level up, it must have specific experience, which increases from war(Monster vs Heroes). The monster move to the next level when all of the heroes 
are on the higher level, and the heroes enter common square.

For Hero:
Every hero has a vector with weapons, armors and potions that he has bought. Every hero has one Weapon and Armor that he uses at a certain time. For the beggining,
these are the first armor and Weapon, which he bought.
////////////////////////////////////////////////////////////////////





////////////////////////////////////////////////////////////////////
//                                                                //
//                          GRID                                  //
//                                                                //
////////////////////////////////////////////////////////////////////

For Grid.cpp and Grid.h:

The Class Grid is the grid for the game with deminsions x and y, that the player chooses. The grid has squares every one of which is one Square(class Square).
With a probability, the Square is Common, Market or nonAccessible which are Subclasses that inherit from SuperClass Square. 

For StartGame:
The game starts. The heroes start from a Market square to buy Items and Spells. For every hero the player must buy at least one weapon for the war otherwise he loses the game.
After, the hero moves from this square and Move function is called which prints the grid and it asks the player where he wants to move.
If the square is a Market, if he wants, he can buy or sell items and Spells. If the square is Common a war probably starts(may or may not happen).
The game ends when all the heroes have LEVEL_MAX(from information.h) or the player decides to quit the game.
If player give for input "quitGame", then the Game is Over.


For buy_sell_and_equip:
When the player buys or sells an item, he can change the item he is holding.


For displayMap:
Prints the grid with UTF-8 characters.

H - is Hero
M - is Monster
B - is both Hero and monster

S - is Market
X - is nonAccessible
H S - is heroes in a Market
////////////////////////////////////////////////////////////////////





////////////////////////////////////////////////////////////////////
//                                                                //
//                          ITEM                                  //
//                                                                //
////////////////////////////////////////////////////////////////////

For Item.cpp and Item.h



////////////////////////////////////////////////////////////////////





////////////////////////////////////////////////////////////////////
//                                                                //
//                         SPELL                                  //
//                                                                //
////////////////////////////////////////////////////////////////////

For Spell.cpp and Spell.h






/////////////////////////////////////////////////////////////////////







////////////////////////////////////////////////////////////////


//min ksexasoyme

-ola ta giro einai nonAccessible


IOANNA GRID LINE : 967 bale kati ekei min einai adeio